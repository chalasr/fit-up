imports:
    - { resource: parameters.yml }

security:
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
    encoders:
            FOS\UserBundle\Model\UserInterface: sha512
    acl:
        connection: default
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # Sonata
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true
        # Signin
        login:
            pattern:  ^/v1/login
            stateless: true
            anonymous: true
            form_login:
                provider: fos_userbundle
                check_path: /v1/login_check
                require_previous_session: false
                username_parameter: email
                password_parameter: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        # Signup
        signup:
            pattern: ^/v1/signup
            anonymous: true
            stateless: true
        # OAuth
        oauth:
            pattern: ^/v1/oauth/login
            anonymous: true
            stateless: true
        # Refresh token
        refresh:
            pattern:  ^/v1/refresh_token
            stateless: true
            anonymous: true
        # Refresh token
        guest:
            pattern:  ^/v1/guest/login
            stateless: true
            anonymous: true
        # REST API
        api:
            pattern:   ^/v1/
            stateless: true
            lexik_jwt: ~
    access_control:
        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Secured part of the Admin
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SUPER_ADMIN, ROLE_SONATA_ADMIN] }
        # REST API
        - { path: ^/v1/signup, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1/guest/login, role: [IS_AUTHENTICATED_ANONYMOUSLY, IS_AUTHENTICATED_FULLY] }
        - { path: ^/v1/refresh_token, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/v1/oauth/login , role: [IS_AUTHENTICATED_ANONYMOUSLY, IS_AUTHENTICATED_FULLY] }
        - { path: ^/v1/, role: [ROLE_ADMIN, ROLE_USER, IS_AUTHENTICATED_FULLY] }
        - { path: ^/ , role: [IS_AUTHENTICATED_FULLY, IS_AUTHENTICATED_ANONYMOUSLY] }
